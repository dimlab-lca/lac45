#!/usr/bin/env python3
"""
Script pour d√©marrer l'application LCA TV avec la bonne configuration
"""

import os
import sys
import sqlite3
from datetime import datetime

def check_database():
    """V√©rifier la base de donn√©es"""
    db_path = 'lca_tv.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå Base de donn√©es {db_path} non trouv√©e")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # V√©rifier les tables importantes
        tables_to_check = ['clients', 'ad_spaces', 'advertisements']
        for table in tables_to_check:
            cursor.execute(f"SELECT COUNT(*) FROM {table}")
            count = cursor.fetchone()[0]
            print(f"‚úÖ Table {table}: {count} enregistrements")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur de base de donn√©es: {e}")
        return False

def main():
    print("üöÄ D√©marrage de LCA TV - Dashboard Avanc√©")
    print("=" * 60)
    
    # V√©rifier la base de donn√©es
    print("üìä V√©rification de la base de donn√©es...")
    if not check_database():
        print("\n‚ùå Probl√®me avec la base de donn√©es")
        sys.exit(1)
    
    print("\nüîß Configuration:")
    print(f"   ‚Ä¢ Base de donn√©es: lca_tv.db")
    print(f"   ‚Ä¢ Port: 5005")
    print(f"   ‚Ä¢ Mode: Development")
    
    print("\nüîê Identifiants de connexion:")
    print("   ‚Ä¢ Utilisateur: admin")
    print("   ‚Ä¢ Mot de passe: lcatv2024")
    
    print("\nüåê URLs importantes:")
    print("   ‚Ä¢ Site public: http://localhost:5005/")
    print("   ‚Ä¢ Login admin: http://localhost:5005/login")
    print("   ‚Ä¢ Dashboard: http://localhost:5005/dashboard")
    print("   ‚Ä¢ API Health: http://localhost:5005/health")
    
    print("\n" + "=" * 60)
    print("D√©marrage de l'application...")
    
    # Importer et d√©marrer l'application
    try:
        from app_advanced import app
        app.run(debug=True, host='0.0.0.0', port=5005)
    except ImportError as e:
        print(f"‚ùå Erreur d'import: {e}")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå Erreur de d√©marrage: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()