#!/usr/bin/env python3
"""
Script d'initialisation de la base de donn√©es LCA TV
"""

import sqlite3
import os
from datetime import datetime

def create_database():
    """Cr√©er la base de donn√©es avec toutes les tables n√©cessaires"""
    
    db_path = 'lca_tv.db'
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üóÑÔ∏è  Cr√©ation des tables...")
        
        # Table des utilisateurs
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                username TEXT UNIQUE NOT NULL,
                email TEXT UNIQUE NOT NULL,
                password_hash TEXT NOT NULL,
                role TEXT DEFAULT 'editor',
                full_name TEXT,
                is_active BOOLEAN DEFAULT 1,
                last_login DATETIME,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # Table des clients
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS clients (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                email TEXT UNIQUE NOT NULL,
                phone TEXT,
                company_name TEXT,
                address TEXT,
                notes TEXT,
                status TEXT DEFAULT 'active',
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # Table des espaces publicitaires
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS ad_spaces (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                location TEXT NOT NULL,
                width INTEGER NOT NULL,
                height INTEGER NOT NULL,
                price DECIMAL(10,2) NOT NULL,
                description TEXT,
                is_active BOOLEAN DEFAULT 1,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # Table des publicit√©s
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS advertisements (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                client_id INTEGER NOT NULL,
                space_id INTEGER NOT NULL,
                content_type TEXT NOT NULL DEFAULT 'image',
                content_html TEXT,
                image_path TEXT,
                target_url TEXT,
                start_date DATE NOT NULL,
                end_date DATE NOT NULL,
                status TEXT DEFAULT 'active',
                impressions INTEGER DEFAULT 0,
                clicks INTEGER DEFAULT 0,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (client_id) REFERENCES clients (id),
                FOREIGN KEY (space_id) REFERENCES ad_spaces (id)
            )
        ''')
        
        # Table des vid√©os (existante)
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS videos (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                description TEXT,
                youtube_id TEXT UNIQUE NOT NULL,
                thumbnail_url TEXT,
                duration TEXT,
                published_at DATETIME,
                category TEXT DEFAULT 'general',
                tags TEXT,
                view_count INTEGER DEFAULT 0,
                is_featured BOOLEAN DEFAULT 0,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # Table des param√®tres
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS settings (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                key TEXT UNIQUE NOT NULL,
                value TEXT,
                description TEXT,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        conn.commit()
        print("‚úÖ Tables cr√©√©es avec succ√®s")
        
        # Ins√©rer des donn√©es de test
        print("\nüìä Insertion des donn√©es de test...")
        
        # Clients de test
        test_clients = [
            ("Entreprise ABC", "contact@abc.com", "+225 01 02 03 04 05", "ABC Corporation", "active"),
            ("Boutique XYZ", "info@xyz.com", "+225 06 07 08 09 10", "XYZ Store", "active"),
            ("Restaurant Le Gourmet", "contact@legourmet.com", "+225 11 12 13 14 15", "Le Gourmet SARL", "active")
        ]
        
        for name, email, phone, company, status in test_clients:
            cursor.execute('''
                INSERT OR IGNORE INTO clients (name, email, phone, company_name, status, created_at)
                VALUES (?, ?, ?, ?, ?, ?)
            ''', (name, email, phone, company, status, datetime.now().isoformat()))
        
        # Espaces publicitaires de test
        test_spaces = [
            ("Header Principal", "header", 728, 90, 50000, "Banni√®re en haut de page"),
            ("Sidebar Droit", "sidebar", 300, 250, 30000, "Encart publicitaire lat√©ral"),
            ("Footer Principal", "footer", 728, 90, 40000, "Banni√®re en bas de page"),
            ("Popup Accueil", "popup", 400, 300, 60000, "Popup d'accueil"),
            ("Banner Large", "banner", 970, 250, 70000, "Grande banni√®re centrale"),
            ("Carr√© Sidebar", "sidebar", 250, 250, 25000, "Petit carr√© lat√©ral")
        ]
        
        for name, location, width, height, price, description in test_spaces:
            cursor.execute('''
                INSERT OR IGNORE INTO ad_spaces (name, location, width, height, price, description, is_active, created_at)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
            ''', (name, location, width, height, price, description, True, datetime.now().isoformat()))
        
        # Param√®tres par d√©faut
        default_settings = [
            ("site_title", "LCA TV", "Titre du site"),
            ("site_description", "Votre cha√Æne TV en ligne", "Description du site"),
            ("contact_email", "contact@lcatv.com", "Email de contact"),
            ("contact_phone", "+225 01 02 03 04 05", "T√©l√©phone de contact")
        ]
        
        for key, value, description in default_settings:
            cursor.execute('''
                INSERT OR IGNORE INTO settings (key, value, description, updated_at)
                VALUES (?, ?, ?, ?)
            ''', (key, value, description, datetime.now().isoformat()))
        
        conn.commit()
        print("‚úÖ Donn√©es de test ins√©r√©es")
        
        # Afficher les statistiques
        cursor.execute("SELECT COUNT(*) FROM clients")
        client_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM ad_spaces")
        space_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM advertisements")
        ad_count = cursor.fetchone()[0]
        
        print(f"\nüìà Statistiques de la base de donn√©es:")
        print(f"   ‚Ä¢ Clients: {client_count}")
        print(f"   ‚Ä¢ Espaces publicitaires: {space_count}")
        print(f"   ‚Ä¢ Publicit√©s: {ad_count}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation de la base de donn√©es: {e}")
        return False

def main():
    print("üöÄ Initialisation de la base de donn√©es LCA TV")
    print("=" * 50)
    
    if create_database():
        print("\n‚úÖ Base de donn√©es initialis√©e avec succ√®s!")
        print("\nüéØ Prochaines √©tapes:")
        print("   1. D√©marrez l'application Flask")
        print("   2. Connectez-vous au dashboard (admin / lcatv2024)")
        print("   3. Testez la cr√©ation de publicit√©s")
    else:
        print("\n‚ùå √âchec de l'initialisation de la base de donn√©es")

if __name__ == "__main__":
    main()